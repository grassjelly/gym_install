#!/bin/bash

set -e

GAZEBO_CONFIG_DIR=$(dirname "$(readlink -f "$0")")

source $HOME/miniconda3/etc/profile.d/conda.sh

# Create conda environment
conda create --name openai-gym pip python=3 --yes
conda activate openai-gym

# Install ROS Kinetic dependencies
sudo apt-get -y install \
cmake gcc g++ qt4-qmake libqt4-dev \
libusb-dev libftdi-dev python-vcstool \
ros-kinetic-octomap-msgs \
ros-kinetic-joy \
ros-kinetic-geodesy \
ros-kinetic-octomap-ros \
ros-kinetic-control-toolbox \
ros-kinetic-pluginlib \
ros-kinetic-trajectory-msgs \
ros-kinetic-control-msgs \
ros-kinetic-std-srvs \
ros-kinetic-nodelet \
ros-kinetic-urdf \
ros-kinetic-rviz \
ros-kinetic-kdl-conversions \
ros-kinetic-eigen-conversions \
ros-kinetic-tf2-sensor-msgs \
ros-kinetic-pcl-ros \
ros-kinetic-navigation \
ros-kinetic-ar-track-alvar \
ros-kinetic-rqt-robot-dashboard \
ros-kinetic-rqt-plot \
ros-kinetic-control-toolbox \
ros-kinetic-ecl-core \
ros-kinetic-ecl-lite \
ros-kinetic-ecl-navigation \
ros-kinetic-ecl-tools \
ros-kinetic-driver-base \
ros-kinetic-image-common \
ros-kinetic-joystick-drivers \
ros-kinetic-kobuki \
ros-kinetic-kobuki-core \
ros-kinetic-kobuki-msgs \
ros-kinetic-navigation \
ros-kinetic-pcl-ros \
ros-kinetic-realtime-tools \
ros-kinetic-ros-control \
ros-kinetic-roslint \
ros-kinetic-turtlebot \
ros-kinetic-turtlebot-create \
ros-kinetic-xacro \
ros-kinetic-yocs-msgs \
ros-kinetic-yujin-ocs \
ros-kinetic-mav-msgs

# Install Gazebo
# sudo apt-get remove ros-kinetic-gazebo* 
# sudo apt-get upgrade
# sudo sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list'
# wget http://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add -
# sudo apt-get update
# sudo apt-get -y install ros-kinetic-gazebo8*

sudo apt-get -y install \
libspnav-dev \
libbluetooth-dev \
libcwiid-dev \
pyqt5-dev-tools \
libusb-dev

# Install Sophus
cd /tmp
git clone https://github.com/stonier/sophus -b release/0.9.1-kinetic
cd sophus
mkdir build
cd build
cmake ..
make
sudo make install

# Install Theano
cd $HOME
git clone git://github.com/Theano/Theano.git
cd Theano/
python setup.py develop

yes | pip install catkin_pkg rospkg pyyaml empy 

export LD_LIBRARY_PATH=:$LD_LIBRARY_PATH:/home/juan/miniconda3/lib/ 
cd $HOME
git clone https://github.com/erlerobot/gym-gazebo
cd $HOME/gym-gazebo/gym_gazebo/envs/installation
cp -r $GAZEBO_CONFIG_DIR/*.patch .
patch < gazebo_repos.patch
patch < setup_kinetic.patch
bash setup_kinetic.bash

conda install -n openai-gym defusedxml pyqt tensorflow-gpu --yes

yes | pip install numpy catkin_pkg rospkg gym matplotlib h5py pyyaml scikit-image netifaces defusedxml opencv-python empy keras

cd $HOME/gym-gazebo
yes | pip install -e .

echo "alias gym_ws=\"\
export LD_LIBRARY_PATH=:\$LD_LIBRARY_PATH:/home/juan/miniconda3/lib/ && \
source $HOME/miniconda3/bin/activate openai-gym && \
source $HOME/gym-gazebo/gym_gazebo/envs/installation/catkin_ws/devel/setup.bash\"" >> $HOME/.bashrc

echo "alias killgym='killall -9 rosout roslaunch rosmaster gzserver nodelet robot_state_publisher gzclient'" >> ~/.bashrc

source $HOME/gym-gazebo/gym_gazebo/envs/installation/catkin_ws/devel/setup.bash
cd $HOME/gym-gazebo/gym_gazebo/envs/installation
bash turtlebot_setup.bash

# # cd /opt/ros/kinetic/lib/python2.7/dist-packages/ && sudo mv cv2.so cv2_old.so
